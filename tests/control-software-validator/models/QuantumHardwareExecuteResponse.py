# generated by datamodel-codegen:
#   filename:  QuantumHardwareExecuteResponse.schema.json

from __future__ import annotations

from typing import Dict, List, Literal, Optional
from uuid import UUID

from pydantic import BaseModel, Field


class RunCircuitResultSchema(BaseModel):
    job_id: int = Field(
        ..., description='Client defined identifier for the execution.', title='Job Id'
    )
    results: Dict[str, int] = Field(
        ...,
        description='Mapping of measured bitstring (little endian notation; q[n]...q[0]) to count of occurrences.',
        title='Results',
    )
    raw_data: Optional[List[str]] = Field(
        None,
        description='A list of bitstrings (little endian notation; `q[n]...q[0]`) ordered by the shot in which it             was measured.',
        title='Raw Data',
    )


class QuantumHardwareExecuteResponse(BaseModel):
    session_id: UUID = Field(
        ...,
        description='An arbitrary string, filled in in the request, which is copied into the reply object.',
        title='Session Id',
    )
    status: Literal['success'] = Field(..., title='Status')
    payload: RunCircuitResultSchema
